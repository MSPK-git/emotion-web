{"version":3,"sources":["states/PersistOnBrowser.ts","states/EmotionState.ts","components/emoticon_1/Table.tsx","states/PartyItemState.ts","components/emoticon_1/EmotionOne.tsx","components/emoticon_2/EmotionTwo.tsx","components/emoticon_3/Table.tsx","components/emoticon_3/elements/Timer.tsx","states/EmoThreePartiyItemState.ts","components/emoticon_3/EmotionThree.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["persistState","key","_ref","setSelf","onSet","window","savedValue","localStorage","getItem","JSON","parse","newValue","_","isReset","removeItem","setItem","stringify","Emotion","emotionState","atom","default","none","effects","Table","items","React","createElement","className","map","item","name","partyItemsState","EmoticonOne","firstName","lastName","_useRecoilState","useRecoilState","_useRecoilState2","_slicedToArray","partyItems","setPartyItems","_useState","useState","_useState2","inputName","setInputName","_useState3","_useState4","inputItem","setInputItem","style","padding","width","height","backgroundColor","type","value","onChange","e","target","onClick","prev","concat","_toConsumableArray","display","options","EraContent","era","EmoticonTwo","_ref2","selectedOption","setSelectedOption","backgroundImage","backgroundRepeat","event","option","find","id","src","alt","title","allow","Timer","endOfTime","seconds","setSeconds","fontSize","setFontSize","useEffect","interval","setInterval","clearInterval","fontWeight","color","emoThreePartyItemsState","EmoticonThree","_objectDestructuringEmpty","_useState5","_useState6","timeEnded","setTimeEnded","_useState7","_useState8","textChange","setTextChange","_useState9","_useState10","btnPressAmount","setBtnPressAmount","_useState11","_useState12","badItem","setBadItem","console","log","flexDirection","alignContent","alignSelf","position","zIndex","margin","top","opacity","transition","_objectSpread","left","animation","animationDelay","transitionDelay","justifyContent","paddingTop","paddingBottom","preventDefault","amount","setTimeout","disabled","App","emotion","setEmotion","divStyle","borderRadius","Fragment","two","one","three","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","RecoilRoot"],"mappings":"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","file":"static/js/main.66b3a5c9.chunk.js","sourcesContent":["import { AtomEffect } from \"recoil\";\r\n\r\n/**\r\n * Returns an atom effect which stores the atom value in the browser's local storage\r\n * @param key A key of the atom state we want to persist in the local storage\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const persistState: (key: string) => AtomEffect<any> =\r\n  (key) =>\r\n  ({ setSelf, onSet }) => {\r\n    // check if we are in the browser environment, if in server environment do nothing\r\n    if (typeof window !== \"undefined\") {\r\n      const savedValue = localStorage.getItem(key);\r\n      if (savedValue !== null) {\r\n        setSelf(JSON.parse(savedValue));\r\n      }\r\n\r\n      onSet((newValue: unknown, _: unknown, isReset: boolean) => {\r\n        isReset\r\n          ? localStorage.removeItem(key)\r\n          : localStorage.setItem(key, JSON.stringify(newValue));\r\n      });\r\n    }\r\n  };\r\n","import { atom } from \"recoil\";\r\nimport { persistState } from \"./PersistOnBrowser\";\r\n\r\nexport enum Emotion {\r\n  \"none\",\r\n  \"one\",\r\n  \"two\",\r\n  \"three\",\r\n}\r\n\r\nexport const emotionState = atom<Emotion>({\r\n  key: \"emotionState\",\r\n  default: Emotion.none,\r\n  effects: [persistState(\"emotionState\")],\r\n});\r\n","import React, { ReactElement } from \"react\";\r\nimport \"./Table.css\";\r\nimport { PartyItem } from \"../../states/PartyItemState\";\r\n\r\nexport type TableProps = {\r\n  items: PartyItem[];\r\n};\r\n\r\nexport default function Table({ items }: TableProps): ReactElement {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <div className=\"table-row heading\">\r\n        <div className=\"row-item\">Wer?</div>\r\n        <div className=\"row-item\">Was?</div>\r\n      </div>\r\n      {items.map((item) => (\r\n        <div className=\"table-row\">\r\n          <div className=\"row-item\">{item.name}</div>\r\n          <div className=\"row-item\">{item.item}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { atom } from \"recoil\";\r\nimport { persistState } from \"./PersistOnBrowser\";\r\n\r\nexport type PartyItem = {\r\n  name: string;\r\n  item: string;\r\n};\r\n\r\nexport const partyItemsState = atom<PartyItem[]>({\r\n  key: \"partyItemsState\",\r\n  default: [{ name: \"Peter\", item: \"Gurke\" }],\r\n  effects: [persistState(\"partyItemsState\")],\r\n});\r\n","import { ReactElement, useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport \"./EmoticonOne.css\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { partyItemsState } from \"../../states/PartyItemState\";\r\n\r\nimport * as React from 'react';\r\n\r\nexport type EmoticonOne = {\r\n  firstName: string;\r\n  lastName: string;\r\n};\r\n\r\nexport default function EmoticonOne({\r\n  firstName,\r\n  lastName,\r\n}: EmoticonOne): ReactElement {\r\n  const [partyItems, setPartyItems] = useRecoilState(partyItemsState);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputItem, setInputItem] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          padding: \"2px\",\r\n          width: \"100%\",\r\n          height: \"1500px\",\r\n          backgroundColor: \"#B8E6B1\",\r\n        }}\r\n      >\r\n        <div style={{ padding: \"70px\" }}>\r\n          <h1 className=\"emo1_h1\">\r\n            Willkommen, <br/>was bringst du zur Grillparty\r\n            mit?\r\n          </h1>\r\n          <p className=\"emo1_p\">\r\n            Schön, dass du dabei bist. Bitte trage deinen Namen ein und teile uns mit, was du zur Grillparty mitbringst. <br/>\r\n            In der Tabelle kannst du sehen, was die anderen Teilnehmer bereits mitbringen werden. Es macht jedoch nichts, wenn etwas mehrfach vorhanden ist. <br/>\r\n            Lass dir etwas Zeit und überlege in Ruhe, was du mitbringen möchtest.\r\n          </p>\r\n          \r\n          <form className=\"form1\">\r\n            <label className=\"label1\">\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                value={inputName}\r\n                onChange={(e) => setInputName(e.target.value)}\r\n                name=\"name\"\r\n                className=\"input1\"\r\n              />\r\n            </label>\r\n            <label className=\"label1\">\r\n              Ich bringe mit...\r\n              <input\r\n                type=\"text\"\r\n                value={inputItem}\r\n                onChange={(e) => setInputItem(e.target.value)}\r\n                name=\"item\"\r\n                className=\"input1\"\r\n              />\r\n            </label>\r\n            <button\r\n              className=\"button1\"\r\n              onClick={() => {\r\n                if (inputItem && inputName) {\r\n                  setPartyItems((prev) => [\r\n                    ...prev,\r\n                    { name: inputName, item: inputItem },\r\n                  ]);\r\n                }\r\n              }}\r\n            >\r\n              Speichern\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"table1\" style={{ display: \"flex\" }}>\r\n            <Table items={partyItems}></Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { ReactElement, useState } from \"react\";\r\nimport \"./EmoticonTwo.css\";\r\nimport * as React from 'react';\r\n\r\ntype SelectOption = {\r\n  value: string;\r\n  display: string;\r\n};\r\n\r\nconst options: SelectOption[] = [\r\n  { value: '', display: 'Keine Zeit ausgewählt' },\r\n  { value: 'fNFzfwLM72c', display: '70er' },\r\n  { value: 'Qt2mbGP6vFI', display: '80er' },\r\n  { value: '4fndeDfaWCg', display: '90er' },\r\n  { value: 'LOZuxwVk7TU', display: '2000er' },\r\n];\r\n\r\nconst EraContent: React.FC<{ era: string }> = ({ era }) => {\r\n  switch (era) {\r\n    case '70er':\r\n      return <div>Disco music, psychedelic art, Star Wars, personal computers</div>;\r\n    case '80er':\r\n      return <div>MTV, neon fashion, Brat Pack movies, video games</div>;\r\n    case '90er':\r\n      return <div>Grunge and hip hop music, Internet, popular TV shows, Y2K fears</div>;\r\n    case '2000er':\r\n      return <div>Social media, reality TV, smartphones, emo and pop punk music</div>;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport type EmoticonTwo = {\r\n  firstName: string;\r\n  lastName: string;\r\n};\r\n\r\nexport default function EmoticonTwo({\r\n  firstName,\r\n  lastName,\r\n}: EmoticonTwo): ReactElement {\r\n  const [selectedOption, setSelectedOption] = useState<SelectOption>(options[0]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const value = event.target.value;\r\n    const option = options.find((option) => option.value === value);\r\n    if (option) setSelectedOption(option);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg\"\r\n      style={{\r\n        backgroundImage: `url('./nostalgia.jpg')`,\r\n        backgroundRepeat: 'no-repeat',\r\n        padding: \"2px\",\r\n        width: \"100%\",\r\n        height: \"1500px\",\r\n      }}\r\n    >\r\n      <div style={{ padding: \"70px\" }}>\r\n        <h1 className=\"heading-emotion-two\">\r\n          Willkommen, In welche Zeit möchtest du zurückversetzt werden?\r\n        </h1>\r\n        <form>\r\n          <div>\r\n            <select value={selectedOption.value} onChange={handleChange}>\r\n              {options.map((option) => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.display}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <p>Sie haben ausgewählt: {selectedOption.display}</p>\r\n          </div>\r\n        </form>\r\n        {selectedOption.value !== \"\" && \r\n          <div className=\"outer\">\r\n            <img className=\"tv\" id=\"image\" src=\"./oldTv.png\" alt=\"Image Description\" />\r\n            <div className=\"youtube-video-container\" >\r\n              <iframe className=\"videoNostalgie\"\r\n                width=\"1080px\"\r\n                height=\"720px\"\r\n                src={`https://www.youtube.com/embed/${selectedOption.value}?autoplay=1&controls=0`}\r\n                title=\"YouTube video player\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                ></iframe>\r\n            </div>\r\n          </div>}\r\n        <EraContent era={selectedOption.display} />\r\n        <div className=\"table\" style={{ display: \"flex\" }}>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React,{ ReactElement } from \"react\";\r\nimport \"./Table.css\";\r\nimport { PartyItem } from \"../../states/PartyItemState\";\r\n\r\nexport type TableProps = {\r\n  items: PartyItem[];\r\n};\r\n\r\nexport default function Table({ items }: TableProps): ReactElement {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <div className=\"table-row heading\">\r\n        <div className=\"row-item\">Wer?</div>\r\n        <div className=\"row-item\">Was?</div>\r\n      </div>\r\n      {items.map((item) => (\r\n        <div className=\"table-row\">\r\n          <div className=\"row-item\">{item.name}</div>\r\n          <div className=\"row-item\">{item.item}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, ReactElement } from \"react\";\r\n\r\ninterface TimerProps {\r\n  endOfTime: () => void;\r\n}\r\n\r\nfunction Timer({ endOfTime }: TimerProps): ReactElement {\r\n  const [seconds, setSeconds] = useState<number>(10);\r\n  const [fontSize, setFontSize] = useState<number>(10);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds((seconds) => seconds - 1);\r\n      setFontSize((fontSize) => (fontSize < 70 ? fontSize + 2 : fontSize));\r\n    }, 1000);\r\n\r\n    // Clean up interval on unmount\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (seconds < 0) {\r\n      endOfTime();\r\n    }\r\n  }, [seconds]);\r\n\r\n  return (\r\n    <div style={{ fontWeight: \"bold\", color: \"red\", fontSize: fontSize }}>\r\n      {seconds < 1\r\n        ? \"nur noch EIN Platz frei!\"\r\n        : `nur noch ${seconds} Plätze frei!`}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","// This state relates to Marias project\r\n\r\nimport { atom } from \"recoil\";\r\nimport { persistState } from \"./PersistOnBrowser\";\r\n\r\nexport type EmoThreePartyItem = {\r\n  name: string;\r\n  item: string;\r\n};\r\n\r\nexport const emoThreePartyItemsState = atom<EmoThreePartyItem[]>({\r\n  key: \"emoThreePartyItemsState\",\r\n  default: [{ name: \"Peter\", item: \"Gurke\" }],\r\n  effects: [persistState(\"emoThreePartyItemsState\")],\r\n});\r\n","import { ReactElement, useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport \"./EmoticonThree.css\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport * as React from \"react\";\r\nimport Timer from \"./elements/Timer\";\r\nimport { emoThreePartyItemsState } from \"../../states/EmoThreePartiyItemState\";\r\nexport type EmoticonOne = {\r\n  firstName: string;\r\n  lastName: string;\r\n};\r\n\r\nexport default function EmoticonThree({}: EmoticonOne): ReactElement {\r\n  const [partyItems, setPartyItems] = useRecoilState(emoThreePartyItemsState);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputItem, setInputItem] = useState(\"\");\r\n  const [timeEnded, setTimeEnded] = useState(false);\r\n  const [textChange, setTextChange] = useState(0);\r\n  const [btnPressAmount, setBtnPressAmount] = useState(0);\r\n  const [badItem, setBadItem] = useState(\"\");\r\n\r\n  const overlayStyle = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    animation: \"slide 4s 1 normal forwards\",\r\n    animationDelay: \"2000ms\",\r\n  };\r\n  // - UNUSED -\r\n  // React.useEffect(() => {\r\n  //   const handleScroll = () => {\r\n  //     console.log(window.scrollY);\r\n  //     if (window.scrollY > 500) {\r\n  //       console.log(\"Der Nutzer hat mehr als 500px gescrollt!\");\r\n  //     }\r\n  //   };\r\n\r\n  //   window.addEventListener(\"scroll\", handleScroll);\r\n\r\n  //   return () => {\r\n  //     window.removeEventListener(\"scroll\", handleScroll);\r\n  //   };\r\n  // }, []);\r\n  React.useEffect(() => {\r\n    console.log(textChange);\r\n  }, [textChange]);\r\n\r\n  function endOfTime() {\r\n    setTimeEnded(true);\r\n  }\r\n  function buttonPressed() {\r\n    if (btnPressAmount === 0) {\r\n      setBtnPressAmount((amount) => amount + 1);\r\n      setBadItem(inputItem);\r\n      setInputItem(\"\");\r\n    } else {\r\n      setBadItem(\"\");\r\n      setTextChange(1);\r\n      setTimeout(function () {\r\n        setTextChange(2);\r\n        setTimeout(function () {\r\n          setTextChange(3);\r\n        }, 5000);\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          padding: \"2px\",\r\n          width: \"100%\",\r\n          height: \"1500px\",\r\n          backgroundColor: \"#222224\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignContent: \"center\",\r\n            padding: \"70px\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              color: textChange === 1 ? \"red\" : \"white\",\r\n              alignSelf: \"center\",\r\n              padding: \"60px 0px 0px 0px\",\r\n              position: \"relative\",\r\n              zIndex: 99,\r\n            }}\r\n            className={textChange === 1 ? \"blinkOpacity\" : \"\"}\r\n          >\r\n            {textChange === 0\r\n              ? \"Bist du bei der Grillparty dabei?\"\r\n              : textChange === 1\r\n              ? \"Na endlich!\"\r\n              : textChange === 2\r\n              ? \"...wenn du nicht kommst...\"\r\n              : \" ...laden wir DICH NIE WIEDER EIN!\"}\r\n          </h1>\r\n          {textChange >= 2 ? (\r\n            <>\r\n              <div style={{ display: \"flex\" }}></div>\r\n              <div\r\n                style={{\r\n                  margin: \"auto\",\r\n                  position: \"relative\",\r\n                  width: \"1000px\",\r\n                  height: \"500px\",\r\n                  top: \"-133px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src=\"./fear-ex.jpg\"\r\n                  className={\"fadeIn\"}\r\n                  alt=\"background\"\r\n                  style={{\r\n                    opacity:  1,\r\n                    transition: \"opacity 2000ms\",\r\n                    width: \"100%\",\r\n                  }}\r\n                />\r\n                <img\r\n                  src=\"./fear-balls.png\"\r\n                  alt=\"foreground\"\r\n                  // @ts-ignore\r\n                  style={{\r\n                    ...overlayStyle,\r\n                    width: \"100%\",\r\n                    transitionDelay: \"2000ms\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div\r\n                style={{ alignSelf: \"center\" }}\r\n                className={`blinkOpacity ${\r\n                  \"fastFadeInOut\"\r\n                }`}\r\n              >\r\n                {textChange < 1 && <Timer endOfTime={endOfTime}></Timer>}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  paddingTop: \"30px\",\r\n                }}\r\n              >\r\n                <form>\r\n                  <div style={{ height: \"100px\" }}>\r\n                    <label\r\n                      style={{\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      Name:\r\n                      <input\r\n                        className={timeEnded && !inputName ? \"blink input3\" : \"input3\"}\r\n                        type=\"text\"\r\n                        value={inputName}\r\n                        onChange={(e) => setInputName(e.target.value)}\r\n                        name=\"name\"\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <label\r\n                    style={{\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    Ich bringe mit...\r\n                  </label>\r\n                  <div style={{ height: \"100px\", width: \"400px\" }}>\r\n                    <input\r\n                      className={timeEnded && !inputItem ? \"blink input3\" : \"input3\"}\r\n                      id=\"input2\"\r\n                      type=\"text\"\r\n                      value={inputItem}\r\n                      onChange={(e) => setInputItem(e.target.value)}\r\n                      name=\"item\"\r\n                    />\r\n                    {badItem && (\r\n                      <div style={{ color: \"red\" }}>\r\n                        {badItem}? Ekelhaft! Bringe etwas anderes mit!\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      paddingBottom: \"20px\",\r\n                    }}\r\n                  >\r\n                    {textChange < 1 && (\r\n                      <button\r\n                        className={`button-one ${\r\n                          timeEnded && inputItem && inputName\r\n                            ? \"blinkOpacity\"\r\n                            : \"\"\r\n                        }`}\r\n                        onClick={(e) => {\r\n                          if (inputItem && inputName) {\r\n                            e.preventDefault();\r\n                            buttonPressed();\r\n                            if (btnPressAmount > 0) {\r\n                              setPartyItems((prev) => [\r\n                                ...prev,\r\n                                { name: inputName, item: inputItem },\r\n                              ]);\r\n                            }\r\n                          }\r\n                        }}\r\n                        disabled={inputItem && inputName ? false : true}\r\n                      >\r\n                        Ich bin dabei!\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </>\r\n          )}\r\n          {textChange < 2 && (\r\n            <div\r\n              className=\"table\"\r\n              style={{ margin: \"0px 20% 0px 20%\", display: \"flex\" }}\r\n            >\r\n              <Table items={partyItems}></Table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { Emotion, emotionState } from \"./states/EmotionState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport EmoticonOne from \"./components/emoticon_1/EmotionOne\";\r\nimport EmoticonTwo from \"./components/emoticon_2/EmotionTwo\";\r\nimport EmoticonThree from \"./components/emoticon_3/EmotionThree\";\r\nimport Home from \"./components/Home\";\r\n\r\nexport type BackgroundColor = \"#282c34\" | \"blue\" | \"cyan\" | \"turquise\";\r\nexport default function App() {\r\n  const [color, changeColor] = useState<BackgroundColor>(\"#282c34\");\r\n  const [emotion, setEmotion] = useRecoilState(emotionState);\r\n\r\n  const divStyle = {\r\n    backgroundColor: \"lightgrey\",\r\n    padding: \"20px\",\r\n    margin: \"10px\",\r\n    borderRadius: \"10px\",\r\n    color: \"black\"\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {emotion !== Emotion.none ? (\r\n        <button \r\n        className={`round-1 button-float ${emotion === Emotion.two ? \"button-nostalgia\" : \"\"}`} \r\n        onClick={() => setEmotion(Emotion.none)}\r\n      >\r\n        ←\r\n      </button>\r\n      \r\n      ) : (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n           \r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n                backgroundColor: \"#282c34\",\r\n              }}\r\n            >\r\n              <div style={divStyle} onClick={() => setEmotion(Emotion.one)}>\r\n                Emotion eins\r\n              </div>\r\n              <div style={divStyle} onClick={() => setEmotion(Emotion.two)}>\r\n                Emotion zwei\r\n              </div>\r\n              <div style={divStyle} onClick={() => setEmotion(Emotion.three)}>\r\n                Emotion drei\r\n              </div>\r\n            </div>\r\n            <p>Bitte wähle eine der drei Emotionen aus.</p>\r\n          </header>\r\n        </div>\r\n      )}\r\n\r\n      {emotion === Emotion.one && (\r\n        <EmoticonOne firstName=\"na\" lastName=\"nu\"></EmoticonOne>\r\n      )}\r\n      {emotion === Emotion.two && (\r\n        <EmoticonTwo firstName=\"na\" lastName=\"nu\"></EmoticonTwo>\r\n      )}\r\n      {emotion === Emotion.three && (\r\n        <EmoticonThree firstName=\"na\" lastName=\"nu\"></EmoticonThree>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}